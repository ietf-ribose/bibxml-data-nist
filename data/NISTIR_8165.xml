<reference anchor="NIST.IR.8165" target="https://doi.org/10.6028/NIST.IR.8165">
  <front>
    <title>Impact of code complexity on software analysis</title>
    <author fullname="De Oliveira, Charles D.">
      <organization/>
    </author>
    <author fullname="Fong, Elizabeth.">
      <organization/>
    </author>
    <author fullname="Black, Paul E.">
      <organization/>
    </author>
    <author>
      <organization>Information Technology Laboratory (National Institute of Standards and Technology)</organization>
    </author>
    <abstract>The Software Assurance Metrics and Tool Evaluation (SAMATE) team evaluated approximately 800 000 warnings from static analyzers.We learned that elements that we call code complexities make the detection of warnings more difficult. Most tools cannot not distinguish between the absence of a weakness and the presence of a weakness. That has been obscured in the code. This paper presents classes of code complexities. Understanding code complexity can assist in the development of coding guidelines for assuring that software is fully analyzable by static analyzers.</abstract>
  </front>
  <seriesInfo name="DOI" value="NIST.IR.8165"/>
  <seriesInfo name="NISTIR; NIST IR; NIST interagency report; NIST internal report" value="8165"/>
</reference>